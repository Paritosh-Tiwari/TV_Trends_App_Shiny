{
    "contents" : "shows_url = function(category_url,show_list)\n{\n        Sys.sleep(abs(rnorm(2,0.5)))\n        list_page = htmlTreeParse(category_url,useInternal=TRUE)\n        \n        shows_names = xpathSApply(list_page,\"//*[@id='the_hub_page']/div[2]/div[3]/ul/li/div/h4/a\",xmlValue)\n        \n        if(!is.null(shows_names))\n        {shows_url = xpathSApply(list_page,\"//*[@id='the_hub_page']/div[2]/div[3]/ul/li/div/h4/a/@href\")\n         shows_url = as.character(shows_url)\n         shows_url = paste(base_url,shows_url,sep=\"\")\n         show_list = rbind(show_list,cbind(shows_names,shows_url))\n         \n         print(category_url)\n         write.csv(show_list,\"show_list.csv\",row.names=FALSE)\n         show_list\n         \n        }\n}\n\n##################################################################################\n\nshow_data_extract = function(show_url,show_data)\n        {print(show_url)\n         show_page = htmlTreeParse(show_url,useInternal=TRUE)\n         categories = xpathSApply(show_page,\"//*[@id='mantle_skin']/div[3]/div/div/div[3]/div[7]/div/p[1]/a\",xmlValue)\n         \n         show_name = xpathSApply(show_page,\"//*[@id='mantle_skin']/div[3]/div/div/div[1]/h1\",xmlValue)\n         user_rating = xpathSApply(show_page,\"//*[@id='mantle_skin']/div[3]/div/div/div[2]/div[1]/div/div[1]/form/div[2]/div[1]\",xmlValue)\n         user_votes = xpathSApply(show_page,\"//*[@id='mantle_skin']/div[3]/div/div/div[2]/div[1]/div/div[1]/form/div[2]/div[2]/div[2]/span\",xmlValue)\n         user_votes = gsub(\",\",\"\",user_votes)\n         user_votes = as.numeric(user_votes)\n         r1 = xpathSApply(show_page,\"//*[@id='mantle_skin']/div[3]/div/div/div[1]/div[2]\",xmlValue)\n         r2 = xpathSApply(show_page,\"//div[@class='tagline']/span/span\",xmlValue)\n         r3 = xpathSApply(show_page,\"//div[@class='tagline']/span/span/span\",xmlValue)\n         if(is.null(r2))\n                {year_end = unlist(str_split(r1,\" \"))\n                 year_end = year_end[length(year_end)]\n                 year_end = gsub(\")\",\"\",year_end)\n                 last_season = xpathSApply(show_page,\"//td[@class='nums']/a\",xmlValue)\n                 last_season = last_season[1]\n                 last_season = str_trim(last_season)\n                 last_season = unlist(str_split(last_season,\" \"))\n                 v_options = grep(\"[0-9]\",last_season)\n                 last_season = last_season[v_options[1]]\n                 last_season = unlist(str_split(last_season,\":\"))\n                 v_options = grep(\"[0-9]\",last_season)\n                 last_season = last_season[v_options[1]]\n                 last_season = str_trim(last_season)\n                 Year_Started = as.numeric(year_end) - as.numeric(last_season)\n                }\n         if(!is.null(r2))\n                {Year_Started = gsub(r3,\"\",r2)\n                 Year_Started = str_trim(Year_Started)\n                 Year_Started = unlist(str_split(Year_Started,\" \"))\n                 Year_Started = Year_Started[length(Year_Started)]  \n                }\n         \n         if(is.null(show_name)) show_name = \"NA\"\n         if(is.null(user_rating)) user_rating = \"NA\"\n         if(is.null(user_votes)) user_votes = \"NA\"\n         if(is.null(Year_Started)) Year_Started = \"NA\"\n         for(category in categories)\n          {show_data = rbind(show_data,cbind(category,show_name,user_rating,user_votes,Year_Started))}\n         show_url_new = unlist(str_split(show_url,\"/\"))\n         show_url_new = show_url_new[length(show_url_new)-1]\n         file = paste(show_url_new,\".csv\",sep=\"\")\n         write.csv(show_data,file,row.names=FALSE)\n         Sys.sleep(abs(rnorm(2,0.5)))\n         show_data\n         \n        }\n\n###################################################################################\n\ndecade_tagging = function(n)\n        { d = character()\n          if(n>=1910 && n<=1950) d = \"1911-1950\"\n#           else if(n>=1921 && n<=1930) d = \"1921-1930\"\n#           else if(n>=1931 && n<=1940) d = \"1931-1940\"\n#           else if(n>=1941 && n<=1950) d = \"1941-1950\"\n          else if(n>=1951 && n<=1960) d = \"1951-1960\"\n          else if(n>=1961 && n<=1970) d = \"1961-1970\"\n          else if(n>=1971 && n<=1980) d = \"1971-1980\"\n          else if(n>=1981 && n<=1990) d = \"1981-1990\"\n          else if(n>=1991 && n<=2000) d = \"1991-2000\"\n          else if(n>=2001 && n<=2010) d = \"2001-2010\"\n          else if(n>=2011 && n<=2014) d = \"2011-2014\"\n          d\n        \n        }\n\n##################################################################################\n\nshow_rating = function(n,upper_t)\n        { if(n>upper_t) tag = \"Popular\"\n          else if(n<=upper_t) tag = \"Not so much !!\"\n          tag\n        }",
    "created" : 1405748910481.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1853355030",
    "id" : "EAD3777B",
    "lastKnownWriteTime" : 1406200724,
    "path" : "D:/Analytics/Developing Data Products/Git_Repo/Data Scraping and Cleanup/Functions.R",
    "project_path" : "Functions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}