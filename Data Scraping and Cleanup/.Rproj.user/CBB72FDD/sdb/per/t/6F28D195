{
    "contents" : "library(stringr)\nlibrary(plyr)\nlibrary(pbapply)\nlibrary(reshape2)\nlibrary(rCharts)\n\n################################################################################\n\n## Sourcing Data\n\nshow_data = read.csv(\"Data.csv\",header=TRUE)\nshow_data[,1] = as.character(show_data[,1])\nshow_data[,2] = as.character(show_data[,2])\nshow_data[,6] = as.character(show_data[,6])\ndim(show_data)\n\n################################################################################\n\n## Removing Missing Values\n\nmissing_values = pbapply(show_data,1,function(x){sum(is.na(x))})\n\nshow_data_n = show_data[which(missing_values==0),]\ndim(show_data_n)\n\ndata_updated = show_data_n[show_data_n$Year_Started>1900,]\ndim(data_updated)\n\n################################################################################\n\n## Assigning Period\n\ndata = data_updated\ndata[,3] = as.numeric(as.character((data[,3])))\ndata[,4] = as.numeric(as.character((data[,4])))\ndata[,5] = as.numeric(as.character((data[,5])))\ntable(data$Category)\n\nPeriod = pbsapply(data[,5],function(x) {decade_tagging(x)})\ndata$Period = Period\ndim(data)\n##################################################################################\n\n## Getting decade wise statistics\n\ndatamelt = melt(data,id=c(\"Category\",\"Name\",\"Year_Started\",\"Period\"),measure.vars=c(\"User_Rating\",\"User_Votes\"))\nDecade_Statistics = dcast(datamelt,Period~variable,sum)\n\n\n#       Period User_Rating User_Votes\n# 1  1911-1920         0.0          0\n# 2  1921-1930        55.4       5758\n# 3  1931-1940         0.0          0\n# 4  1941-1950       143.5       1484\n# 5  1951-1960      1658.4      38509\n# 6  1961-1970      1823.3      54565\n# 7  1971-1980      2211.4      62805\n# 8  1981-1990      3822.7     174575\n# 9  1991-2000      9076.3     818898\n# 10 2001-2010     32854.2    2422001\n# 11 2011-2014      8622.8     185695\n\n\n# Very less number of shows before 1950. So re-dividing the statistics to include\n# 1911-1950 in one group\n\nnames(Decade_Statistics) = c(\"Period\",\"Total_User_Ratings\",\"Total_User_Votes\")\n\n###################################################################################\n\n## Calculation Success Quotient\n\ndata_merge = merge(data,Decade_Statistics,by.x=\"Period\",by.y=\"Period\",all=TRUE)\n\nhead(data_merge)\n\ndata_merge$sq = (data_merge$User_Votes/data_merge$Total_User_Votes)*data_merge$User_Rating*100\n\nq = quantile(data_merge$sq,probs=seq(0,1,0.20))\n\n## Successful Show threshold\n\nupper_t = q[5]\n\nRating = pbsapply(data_merge[,10],function(x) {show_rating(x,upper_t)})\n\ndata_merge$Rating = Rating\n\ndata_merge$count = 1\n\nhead(data_merge)\n\n#####################################################################################\nwrite.csv(data_merge[,c(1,2,3,4,5,6,7,10,11)],\"TV_Show_Tidy_Data.csv\",row.names=FALSE)\n\n\n#####################################################################################\n# datamelt_n = melt(data_merge,id=c(\"decade\",\"Category\",\"Name\",\"Year_Started\",\"decade\",\"rating\"),measure.vars=c(\"User_Rating\",\"User_Votes\",\"Total_User_Ratings\",\"Total_User_Votes\",\"sq\",\"count\"))\n# \n# t1 = dcast(datamelt_n,decade+rating~variable,sum)\n# t2 = dcast(datamelt_n,Category+rating~variable,sum)\n# t3 = dcast(datamelt_n,Category+decade+rating~variable,sum)\n# \n# \n# ######################################################################################\n# \n# n1 <- nPlot(count ~ decade, group = \"rating\", data = t1, type = \"multiBarChart\")\n# n2 <- nPlot(count ~ Category, group = \"rating\", data = t2[1:10,], type = \"multiBarChart\")\n# n3 <- nPlot(count ~ decade, group = \"rating\", data = t3[t3$Category==\"Comedy\",], type = \"multiBarChart\")\n# n3$chart(color = c('blue', 'green'))\n# n3$chart(reduceXTicks = FALSE)\n# n3$xAxis(staggerLabels = TRUE)\n# n3\n# \n# \n# n4 <- nPlot(count ~ Category, group = \"rating\", data = t4, type = \"multiBarChart\")\n# n4$chart(reduceXTicks = FALSE)\n# n4$xAxis(rotateLabels=-15)\n# #n4$set(width = 500, height = 300)\n# n4\n# \n# ######################################################################################\n# \n# \n",
    "created" : 1405748905889.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1368148543",
    "id" : "6F28D195",
    "lastKnownWriteTime" : 1406183484,
    "path" : "D:/Analytics/Developing Data Products/Git_Repo/Data Scraping and Cleanup/Data_Cleanup.R",
    "project_path" : "Data_Cleanup.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}